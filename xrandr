#!/bin/bash
set -o pipefail

# Passes options to rofi
# Arguments: Propmt, selection so far.
set_opts() {
    echo -en "\0prompt\x1f$1\n"
    echo -en "\0message\x1f$2\n"
    echo -en "\0no-custom\x1ftrue\n"
    echo -en "\0keep-selection\x1ffalse\n"
}

source lib/get_outputs
source lib/get_modes
source lib/get_rates
source lib/apply
    
# Add current input to ROFI_DATA
if [[ -n "$ROFI_DATA" ]]; then ROFI_DATA+=":"; fi 
ROFI_DATA+="$(echo "$1" | xargs)" # strip whitespace
# And pass it on to the next round
echo -en "\0data\x1f$ROFI_DATA\n"

# Parse the data into an array to access easily
IFS=":" read -ra DATA <<< "$ROFI_DATA"

echo "$ROFI_DATA" 1>&2

# If called with no data, list displays
if [[ ${#DATA[@]} == 0 ]]; then 
    rofi_outputs

# If called with an argument, check ROFI_DATA
# If no data yet, select an action
elif [[ ${#DATA[@]} == 1 ]]; then
    echo -en "\0prompt\x1fSetting to change\n"
    echo -en "\0no-custom\x1ftrue\n"
    echo -en "\0keep-selection\x1ffalse\n"
    echo -en "\0icon\x1fshapes\n"

    echo "Resolution"
    echo "Disable"
    echo "Positioning"
    echo "Rotation"
    echo "Primary"

# Else we are performing an action
else 
    # The display should be in the first element of DATA
    OUTPUT="${DATA[0]}"
    # The action should be in the second element of DATA
    case "${DATA[1]}" in
        "Resolution")
            if [[ ${#DATA[@]} == 2 ]]; then 
                echo "Selecting resolution" >&2
                rofi_resolutions "$OUTPUT"
            elif [[ ${#DATA[@]} == 3 ]]; then
                echo "Selecting framerate" >&2
                rofi_rates "$OUTPUT" "${DATA[2]}"
            else
                echo "Applying resolution" >&2
                apply_resolution "$OUTPUT" "${DATA[2]}" "${DATA[3]}"
            fi
            ;;
        "Disable")
            echo "Disabling output" >&2
            ;;
        "Position")
            echo "Selecting position" >&2
            ;;
        "Rotation")
            echo "Selecting rotation" >&2
            ;;
        "Primary")
            echo "Selecting primary" >&2
            ;;
        *)
            echo "Not an action: ${DATA[1]}"
            ;;
    esac
fi

